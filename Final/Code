
"""Emotion Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HSC3pIGOp7SHbt5l7a-wMOzoAXUkw2vB
"""

#User Emotion Analysis Using Artificial Intelligence

import pandas as pd
import numpy as np
import tweepy
from textblob import TextBlob
from wordcloud import WordCloud
import matplotlib.pyplot as plt
import re

#From Twitter Developer Site
consumerKey = 'GZd5LajUQ75XEwHPRygPkhkcZ'
consumerSecret = '7tMiKALQGl7DM0iPJU4f2AM5TIsVZu4XBojJWgR1ZwzTPYPfS4'
accessToken = '1399401469858750468-wei6bK6Id0BUsZqC8mZkQ7cJ5C69dT'
accessTokenSecret = 'O643RWcGFEWnOJlGEpDTSjHwcpO6MscSrrMMxvcp1Ommc'

authenticate = tweepy.OAuthHandler(consumerKey, consumerSecret)
authenticate.set_access_token(accessToken, accessTokenSecret)
API = tweepy.API(authenticate, wait_on_rate_limit = True)

#Here, the tweets are scraped
usertweets = API.user_timeline(screen_name = "elonmusk", count = 200, lang = "en", tweet_mode = "extended")
print("Displaying the recent posts by the user: \n")
x=1
for tweet in usertweets[0:30]:
  print(str(x) + ')' + tweet.full_text + '\n')
  x+=1

#Here, the dataframe is created
frame = pd.DataFrame( [tweet.full_text for tweet in usertweets], columns=['User Tweets'])
frame.head(30)

#Here, the URLs, Retweets are removed. But hashtag is not removed as the user might express negative emotion through hashtags(#) also
def organize(text):
  text = re.sub(r'RT[\s]+','',text)
  text = re.sub(r'https?:\/\/\S+','',text)
  return text

frame['User Tweets'] = frame['User Tweets'].apply(organize)
frame

def analyse(text):
  return TextBlob(text).sentiment.subjectivity
def analyse1(text): 
  return TextBlob(text).sentiment.polarity

frame['Opinionative Data of Tweets'] = frame['User Tweets'].apply(analyse)
frame['Emotion Type'] = frame['User Tweets'].apply(analyse1)

frame

#Here, from the tweets, the keywords that occur frequently/repeated are displayed
repeatedwords = ' '.join( [tweet for tweet in frame['User Tweets']] )
GroupOfWords = WordCloud (width = 1920, height=1080, random_state = 21, max_font_size = 150).generate(repeatedwords)
plt.imshow(GroupOfWords, interpolation= "bilinear")
plt.axis('off')
plt.show()

#Here, the emotions are classified

def analyse2(threshold):
  if threshold > 0:
    return 'Positive'
  elif threshold == 0:
    return 'Neutral'
  else:
    return 'Negative'
frame['Analysis'] =  frame['Emotion Type'].apply(analyse2)  
frame

from google.colab import drive
drive.mount('/drive')
frame.to_csv('/drive/My Drive/output/output1.csv')
